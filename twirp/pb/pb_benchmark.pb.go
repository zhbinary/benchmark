// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb_benchmark.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BenchmarkMessage struct {
	Field1               *string  `protobuf:"bytes,1,req,name=field1" json:"field1,omitempty"`
	Field9               *string  `protobuf:"bytes,9,opt,name=field9" json:"field9,omitempty"`
	Field18              *string  `protobuf:"bytes,18,opt,name=field18" json:"field18,omitempty"`
	Field80              *bool    `protobuf:"varint,80,opt,name=field80,def=0" json:"field80,omitempty"`
	Field81              *bool    `protobuf:"varint,81,opt,name=field81,def=1" json:"field81,omitempty"`
	Field2               *int32   `protobuf:"varint,2,req,name=field2" json:"field2,omitempty"`
	Field3               *int32   `protobuf:"varint,3,req,name=field3" json:"field3,omitempty"`
	Field280             *int32   `protobuf:"varint,280,opt,name=field280" json:"field280,omitempty"`
	Field6               *int32   `protobuf:"varint,6,opt,name=field6,def=0" json:"field6,omitempty"`
	Field22              *int64   `protobuf:"varint,22,opt,name=field22" json:"field22,omitempty"`
	Field4               *string  `protobuf:"bytes,4,opt,name=field4" json:"field4,omitempty"`
	Field5               []uint64 `protobuf:"fixed64,5,rep,name=field5" json:"field5,omitempty"`
	Field59              *bool    `protobuf:"varint,59,opt,name=field59,def=0" json:"field59,omitempty"`
	Field7               *string  `protobuf:"bytes,7,opt,name=field7" json:"field7,omitempty"`
	Field16              *int32   `protobuf:"varint,16,opt,name=field16" json:"field16,omitempty"`
	Field130             *int32   `protobuf:"varint,130,opt,name=field130,def=0" json:"field130,omitempty"`
	Field12              *bool    `protobuf:"varint,12,opt,name=field12,def=1" json:"field12,omitempty"`
	Field17              *bool    `protobuf:"varint,17,opt,name=field17,def=1" json:"field17,omitempty"`
	Field13              *bool    `protobuf:"varint,13,opt,name=field13,def=1" json:"field13,omitempty"`
	Field14              *bool    `protobuf:"varint,14,opt,name=field14,def=1" json:"field14,omitempty"`
	Field104             *int32   `protobuf:"varint,104,opt,name=field104,def=0" json:"field104,omitempty"`
	Field100             *int32   `protobuf:"varint,100,opt,name=field100,def=0" json:"field100,omitempty"`
	Field101             *int32   `protobuf:"varint,101,opt,name=field101,def=0" json:"field101,omitempty"`
	Field102             *string  `protobuf:"bytes,102,opt,name=field102" json:"field102,omitempty"`
	Field103             *string  `protobuf:"bytes,103,opt,name=field103" json:"field103,omitempty"`
	Field29              *int32   `protobuf:"varint,29,opt,name=field29,def=0" json:"field29,omitempty"`
	Field30              *bool    `protobuf:"varint,30,opt,name=field30,def=0" json:"field30,omitempty"`
	Field60              *int32   `protobuf:"varint,60,opt,name=field60,def=-1" json:"field60,omitempty"`
	Field271             *int32   `protobuf:"varint,271,opt,name=field271,def=-1" json:"field271,omitempty"`
	Field272             *int32   `protobuf:"varint,272,opt,name=field272,def=-1" json:"field272,omitempty"`
	Field150             *int32   `protobuf:"varint,150,opt,name=field150" json:"field150,omitempty"`
	Field23              *int32   `protobuf:"varint,23,opt,name=field23,def=0" json:"field23,omitempty"`
	Field24              *bool    `protobuf:"varint,24,opt,name=field24,def=0" json:"field24,omitempty"`
	Field25              *int32   `protobuf:"varint,25,opt,name=field25,def=0" json:"field25,omitempty"`
	Field78              *bool    `protobuf:"varint,78,opt,name=field78" json:"field78,omitempty"`
	Field67              *int32   `protobuf:"varint,67,opt,name=field67,def=0" json:"field67,omitempty"`
	Field68              *int32   `protobuf:"varint,68,opt,name=field68" json:"field68,omitempty"`
	Field128             *int32   `protobuf:"varint,128,opt,name=field128,def=0" json:"field128,omitempty"`
	Field129             *string  `protobuf:"bytes,129,opt,name=field129,def=xxxxxxxxxxxxxxxxxxxxx" json:"field129,omitempty"`
	Field131             *int32   `protobuf:"varint,131,opt,name=field131,def=0" json:"field131,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BenchmarkMessage) Reset()         { *m = BenchmarkMessage{} }
func (m *BenchmarkMessage) String() string { return proto.CompactTextString(m) }
func (*BenchmarkMessage) ProtoMessage()    {}
func (*BenchmarkMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_benchmark_3eb9ab520c9c2449, []int{0}
}
func (m *BenchmarkMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BenchmarkMessage.Unmarshal(m, b)
}
func (m *BenchmarkMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BenchmarkMessage.Marshal(b, m, deterministic)
}
func (dst *BenchmarkMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BenchmarkMessage.Merge(dst, src)
}
func (m *BenchmarkMessage) XXX_Size() int {
	return xxx_messageInfo_BenchmarkMessage.Size(m)
}
func (m *BenchmarkMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BenchmarkMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BenchmarkMessage proto.InternalMessageInfo

const Default_BenchmarkMessage_Field80 bool = false
const Default_BenchmarkMessage_Field81 bool = true
const Default_BenchmarkMessage_Field6 int32 = 0
const Default_BenchmarkMessage_Field59 bool = false
const Default_BenchmarkMessage_Field130 int32 = 0
const Default_BenchmarkMessage_Field12 bool = true
const Default_BenchmarkMessage_Field17 bool = true
const Default_BenchmarkMessage_Field13 bool = true
const Default_BenchmarkMessage_Field14 bool = true
const Default_BenchmarkMessage_Field104 int32 = 0
const Default_BenchmarkMessage_Field100 int32 = 0
const Default_BenchmarkMessage_Field101 int32 = 0
const Default_BenchmarkMessage_Field29 int32 = 0
const Default_BenchmarkMessage_Field30 bool = false
const Default_BenchmarkMessage_Field60 int32 = -1
const Default_BenchmarkMessage_Field271 int32 = -1
const Default_BenchmarkMessage_Field272 int32 = -1
const Default_BenchmarkMessage_Field23 int32 = 0
const Default_BenchmarkMessage_Field24 bool = false
const Default_BenchmarkMessage_Field25 int32 = 0
const Default_BenchmarkMessage_Field67 int32 = 0
const Default_BenchmarkMessage_Field128 int32 = 0
const Default_BenchmarkMessage_Field129 string = "xxxxxxxxxxxxxxxxxxxxx"
const Default_BenchmarkMessage_Field131 int32 = 0

func (m *BenchmarkMessage) GetField1() string {
	if m != nil && m.Field1 != nil {
		return *m.Field1
	}
	return ""
}

func (m *BenchmarkMessage) GetField9() string {
	if m != nil && m.Field9 != nil {
		return *m.Field9
	}
	return ""
}

func (m *BenchmarkMessage) GetField18() string {
	if m != nil && m.Field18 != nil {
		return *m.Field18
	}
	return ""
}

func (m *BenchmarkMessage) GetField80() bool {
	if m != nil && m.Field80 != nil {
		return *m.Field80
	}
	return Default_BenchmarkMessage_Field80
}

func (m *BenchmarkMessage) GetField81() bool {
	if m != nil && m.Field81 != nil {
		return *m.Field81
	}
	return Default_BenchmarkMessage_Field81
}

func (m *BenchmarkMessage) GetField2() int32 {
	if m != nil && m.Field2 != nil {
		return *m.Field2
	}
	return 0
}

func (m *BenchmarkMessage) GetField3() int32 {
	if m != nil && m.Field3 != nil {
		return *m.Field3
	}
	return 0
}

func (m *BenchmarkMessage) GetField280() int32 {
	if m != nil && m.Field280 != nil {
		return *m.Field280
	}
	return 0
}

func (m *BenchmarkMessage) GetField6() int32 {
	if m != nil && m.Field6 != nil {
		return *m.Field6
	}
	return Default_BenchmarkMessage_Field6
}

func (m *BenchmarkMessage) GetField22() int64 {
	if m != nil && m.Field22 != nil {
		return *m.Field22
	}
	return 0
}

func (m *BenchmarkMessage) GetField4() string {
	if m != nil && m.Field4 != nil {
		return *m.Field4
	}
	return ""
}

func (m *BenchmarkMessage) GetField5() []uint64 {
	if m != nil {
		return m.Field5
	}
	return nil
}

func (m *BenchmarkMessage) GetField59() bool {
	if m != nil && m.Field59 != nil {
		return *m.Field59
	}
	return Default_BenchmarkMessage_Field59
}

func (m *BenchmarkMessage) GetField7() string {
	if m != nil && m.Field7 != nil {
		return *m.Field7
	}
	return ""
}

func (m *BenchmarkMessage) GetField16() int32 {
	if m != nil && m.Field16 != nil {
		return *m.Field16
	}
	return 0
}

func (m *BenchmarkMessage) GetField130() int32 {
	if m != nil && m.Field130 != nil {
		return *m.Field130
	}
	return Default_BenchmarkMessage_Field130
}

func (m *BenchmarkMessage) GetField12() bool {
	if m != nil && m.Field12 != nil {
		return *m.Field12
	}
	return Default_BenchmarkMessage_Field12
}

func (m *BenchmarkMessage) GetField17() bool {
	if m != nil && m.Field17 != nil {
		return *m.Field17
	}
	return Default_BenchmarkMessage_Field17
}

func (m *BenchmarkMessage) GetField13() bool {
	if m != nil && m.Field13 != nil {
		return *m.Field13
	}
	return Default_BenchmarkMessage_Field13
}

func (m *BenchmarkMessage) GetField14() bool {
	if m != nil && m.Field14 != nil {
		return *m.Field14
	}
	return Default_BenchmarkMessage_Field14
}

func (m *BenchmarkMessage) GetField104() int32 {
	if m != nil && m.Field104 != nil {
		return *m.Field104
	}
	return Default_BenchmarkMessage_Field104
}

func (m *BenchmarkMessage) GetField100() int32 {
	if m != nil && m.Field100 != nil {
		return *m.Field100
	}
	return Default_BenchmarkMessage_Field100
}

func (m *BenchmarkMessage) GetField101() int32 {
	if m != nil && m.Field101 != nil {
		return *m.Field101
	}
	return Default_BenchmarkMessage_Field101
}

func (m *BenchmarkMessage) GetField102() string {
	if m != nil && m.Field102 != nil {
		return *m.Field102
	}
	return ""
}

func (m *BenchmarkMessage) GetField103() string {
	if m != nil && m.Field103 != nil {
		return *m.Field103
	}
	return ""
}

func (m *BenchmarkMessage) GetField29() int32 {
	if m != nil && m.Field29 != nil {
		return *m.Field29
	}
	return Default_BenchmarkMessage_Field29
}

func (m *BenchmarkMessage) GetField30() bool {
	if m != nil && m.Field30 != nil {
		return *m.Field30
	}
	return Default_BenchmarkMessage_Field30
}

func (m *BenchmarkMessage) GetField60() int32 {
	if m != nil && m.Field60 != nil {
		return *m.Field60
	}
	return Default_BenchmarkMessage_Field60
}

func (m *BenchmarkMessage) GetField271() int32 {
	if m != nil && m.Field271 != nil {
		return *m.Field271
	}
	return Default_BenchmarkMessage_Field271
}

func (m *BenchmarkMessage) GetField272() int32 {
	if m != nil && m.Field272 != nil {
		return *m.Field272
	}
	return Default_BenchmarkMessage_Field272
}

func (m *BenchmarkMessage) GetField150() int32 {
	if m != nil && m.Field150 != nil {
		return *m.Field150
	}
	return 0
}

func (m *BenchmarkMessage) GetField23() int32 {
	if m != nil && m.Field23 != nil {
		return *m.Field23
	}
	return Default_BenchmarkMessage_Field23
}

func (m *BenchmarkMessage) GetField24() bool {
	if m != nil && m.Field24 != nil {
		return *m.Field24
	}
	return Default_BenchmarkMessage_Field24
}

func (m *BenchmarkMessage) GetField25() int32 {
	if m != nil && m.Field25 != nil {
		return *m.Field25
	}
	return Default_BenchmarkMessage_Field25
}

func (m *BenchmarkMessage) GetField78() bool {
	if m != nil && m.Field78 != nil {
		return *m.Field78
	}
	return false
}

func (m *BenchmarkMessage) GetField67() int32 {
	if m != nil && m.Field67 != nil {
		return *m.Field67
	}
	return Default_BenchmarkMessage_Field67
}

func (m *BenchmarkMessage) GetField68() int32 {
	if m != nil && m.Field68 != nil {
		return *m.Field68
	}
	return 0
}

func (m *BenchmarkMessage) GetField128() int32 {
	if m != nil && m.Field128 != nil {
		return *m.Field128
	}
	return Default_BenchmarkMessage_Field128
}

func (m *BenchmarkMessage) GetField129() string {
	if m != nil && m.Field129 != nil {
		return *m.Field129
	}
	return Default_BenchmarkMessage_Field129
}

func (m *BenchmarkMessage) GetField131() int32 {
	if m != nil && m.Field131 != nil {
		return *m.Field131
	}
	return Default_BenchmarkMessage_Field131
}

func init() {
	proto.RegisterType((*BenchmarkMessage)(nil), "pb.BenchmarkMessage")
}

func init() { proto.RegisterFile("pb_benchmark.proto", fileDescriptor_pb_benchmark_3eb9ab520c9c2449) }

var fileDescriptor_pb_benchmark_3eb9ab520c9c2449 = []byte{
	// 504 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x94, 0xcd, 0x6e, 0xd3, 0x40,
	0x14, 0x85, 0xb1, 0x53, 0xb7, 0x8d, 0x05, 0xa8, 0x8c, 0xa0, 0x9c, 0x16, 0x9a, 0x5a, 0x5d, 0x79,
	0x43, 0x34, 0x3f, 0xfe, 0x0d, 0x5d, 0x15, 0x16, 0xdd, 0x80, 0xc0, 0x3c, 0x00, 0x4a, 0xa8, 0xd3,
	0x22, 0x02, 0x89, 0x92, 0x22, 0xc1, 0x8e, 0x9f, 0x07, 0x80, 0x15, 0xe2, 0x39, 0x78, 0x42, 0x14,
	0xd7, 0x73, 0x67, 0xea, 0x69, 0x76, 0xf7, 0x7c, 0xf7, 0x78, 0xee, 0x9d, 0x39, 0x4a, 0xc8, 0x16,
	0x93, 0xb7, 0x93, 0xfa, 0xd3, 0xbb, 0x8b, 0x8f, 0xe3, 0xe5, 0x87, 0xe1, 0x62, 0x39, 0xbf, 0x9c,
	0x33, 0x7f, 0x31, 0x39, 0xfa, 0xd7, 0x0f, 0x77, 0x4e, 0xb4, 0xfe, 0xa2, 0x5e, 0xad, 0xc6, 0xe7,
	0x35, 0xdb, 0x0d, 0x37, 0xa7, 0xef, 0xeb, 0xd9, 0x99, 0x80, 0x17, 0xf9, 0x71, 0xbf, 0x6a, 0x2b,
	0xd2, 0x4b, 0xf4, 0x23, 0x8f, 0xf4, 0x92, 0x21, 0xdc, 0xba, 0xea, 0x28, 0xc0, 0x1a, 0xa0, 0x4b,
	0x76, 0xd8, 0x92, 0x82, 0xe3, 0x55, 0xe4, 0xc5, 0xdb, 0xa3, 0x60, 0x3a, 0x9e, 0xad, 0xea, 0x4a,
	0xab, 0x6c, 0xa0, 0x1b, 0x04, 0x5e, 0x37, 0x0d, 0x1b, 0x97, 0xcb, 0xcf, 0xc4, 0xcd, 0x91, 0x12,
	0x7e, 0xe4, 0xc7, 0x41, 0x7b, 0xa4, 0x24, 0x5d, 0xa1, 0x67, 0xe9, 0x8a, 0x3d, 0x0a, 0xb7, 0xaf,
	0x3a, 0x0a, 0x8e, 0xbf, 0x7e, 0xe4, 0xc5, 0x41, 0x45, 0x02, 0xdb, 0x6b, 0x4d, 0x19, 0x36, 0xd7,
	0x64, 0xe4, 0xf1, 0xd6, 0x97, 0xd1, 0x0a, 0x52, 0x62, 0x37, 0xf2, 0xe2, 0x5e, 0xa5, 0x4b, 0x3a,
	0x29, 0xc1, 0x86, 0xb5, 0x74, 0x42, 0x7a, 0x8a, 0x20, 0xea, 0xc5, 0x9b, 0xad, 0x9e, 0xd2, 0xca,
	0x69, 0x89, 0xa7, 0xee, 0xca, 0x69, 0x49, 0xc6, 0x1c, 0x5b, 0xd6, 0x07, 0x73, 0x73, 0x8b, 0x19,
	0x76, 0x9a, 0xc1, 0x75, 0xc9, 0x06, 0xed, 0x52, 0x42, 0x71, 0xfc, 0xf0, 0xf4, 0xe8, 0xa4, 0xd1,
	0x25, 0x0a, 0x89, 0xdb, 0xce, 0x25, 0x0a, 0x69, 0x78, 0x8e, 0x7b, 0x2e, 0xcf, 0x0d, 0x57, 0xb8,
	0xe3, 0x72, 0x65, 0x78, 0x82, 0xbb, 0x2e, 0x4f, 0xd8, 0x81, 0x9e, 0x8f, 0x27, 0xb8, 0xe8, 0x8c,
	0xc7, 0x6d, 0xcc, 0x71, 0xd6, 0xc5, 0xdc, 0xc2, 0x02, 0x75, 0x17, 0x0b, 0xb6, 0x4f, 0x58, 0x62,
	0xda, 0x5c, 0x18, 0xd5, 0x16, 0x53, 0x38, 0xbf, 0xc6, 0xd6, 0x49, 0x68, 0x9f, 0xb0, 0xc4, 0x81,
	0xfe, 0xaa, 0x56, 0xe8, 0x91, 0x14, 0xc7, 0xc0, 0x7d, 0x24, 0xc5, 0xd9, 0xe3, 0xb6, 0x21, 0xe3,
	0x38, 0x6e, 0xdc, 0xfe, 0x13, 0x51, 0x69, 0x89, 0x1d, 0xea, 0x94, 0xe5, 0x02, 0xbf, 0x7c, 0xe2,
	0x24, 0x5a, 0x0d, 0x12, 0xbf, 0xdd, 0x06, 0x49, 0x39, 0x15, 0x29, 0xc7, 0x1f, 0xcf, 0xca, 0xa9,
	0x48, 0xb9, 0x19, 0x5d, 0xe1, 0x61, 0x67, 0x74, 0x45, 0xa3, 0xcb, 0x04, 0x70, 0x47, 0x97, 0x89,
	0x71, 0xa7, 0xd8, 0xeb, 0xb8, 0x53, 0x0a, 0x59, 0x5e, 0xe0, 0xe5, 0xda, 0x5d, 0xe9, 0x92, 0x6c,
	0x59, 0x8e, 0x67, 0xd7, 0x6d, 0x99, 0xc9, 0x66, 0x56, 0xe0, 0xb9, 0x95, 0xcd, 0xac, 0x30, 0xd9,
	0x94, 0x05, 0xbe, 0x75, 0xb3, 0x29, 0x0b, 0x26, 0x89, 0x97, 0xf8, 0xbe, 0xe6, 0xfd, 0xd1, 0x83,
	0x2f, 0x37, 0xfd, 0xc8, 0x53, 0x5a, 0x79, 0x17, 0xf8, 0xe9, 0xe4, 0x5d, 0xc8, 0xe3, 0x30, 0x38,
	0xad, 0x67, 0xb3, 0x39, 0x53, 0x61, 0xef, 0xcd, 0xf8, 0x2b, 0xbb, 0x3f, 0x5c, 0x4c, 0x86, 0xdd,
	0x7f, 0xb1, 0xfd, 0x1b, 0xd5, 0xa3, 0x5b, 0x27, 0xfe, 0xa9, 0xf7, 0x3f, 0x00, 0x00, 0xff, 0xff,
	0xa0, 0x00, 0xf6, 0x3d, 0x0f, 0x05, 0x00, 0x00,
}
